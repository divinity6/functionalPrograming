/**
 * 프로그람 설명문서 주석
 * 2022.07. 03
 *
 *
 *           ===== 타임라인 다이어그램 그리기 =====
 *
 *      @액션을확인하기
 *
 *      - 모든 액션은 타임라인에 표시되어야 한다
 *
 *      --> 복합적인 액션도 있기 때문에 변수를 읽고 쓰는 것처럼
 *          하나의 액션처럼 보이지만, 사실은 여러 액션으로 되어있는 액션을
 *          하나의 액션으로 파악하기 위해 주의깊게 봐야한다
 *
 *      @액션을그리기
 *
 *      - 액션은 순서대로 실행되거나, 동시에 실행될 수 있다
 *
 *      1. 순서대로 실행되는 액션 : 하나가 끝나고 다음이 시작
 *
 *      --> 순서대로 실행되는 액션은 같은 타임라인에 표시
 *
 *      2. 동시에 실행되는 액션 : 동시에 실행되거나 왼쪽 먼저 또는 오른쪽 먼저 실행
 *
 *      --> 동시에 실행되거나, 순서가 섞여 실행되는 경우 분리된 타임라인으로 표시.
 *          다음과 같이 다양한 경우에 액션이 동시에 실행될 수 있다.
 *
 *      ----> 비동기 콜백
 *      ----> 멀티 프로세스
 *      ----> 멀티스레드
 *      ----> 여러 장치
 *
 *      --> 모든 액션을 그린 후 실행 순서를 제한하기 위해 점선을 사용할 수 있다
 *
 *          예) ajax 콜백은 ajax 요청전에 실행할 수 없다
 *
 *     @타임라인을단순화하기
 *
 *     - 언어의 특징을 사용해 타임라인을 단순화 할 수 있다
 *
 *     --> 순서가 섞이지 않는 두 액션은 하나의 박스로 합친다
 *
 *     --> 타임라인 끝에서 새로운 타임라인 하나만 생긴다면 바로 합친다
 *
 *     --> 순서에 제약이 있는 경우 점선을 추가한다
 *
 *     @타임라인읽기
 *
 *     - 일반적으로 서로 다른 타임라인에 있는 액션은 세가지 순서로 실행될
 *       수 있다.
 *
 *     --> 동시에 실행되거나, 왼쪽이 먼저 실행되거나, 오른쪽이 먼저 실행될
 *         수 있다
 *     ----> 잘못된 결과를 가져올 수 있음
 *
 *
 *     - 타임라인을 나란히 보면 문제가 보인다
 *
 *     - 타임라인에 있는 단계들은 이벤트 큐가 순서대로 처리하는 것을 보장한다
 *
 */

/**
 *           ===== 자원을 공유하는 타임라인은 문제가 생길 수 있다 =====
 *
 *      - 공유하는 자원을 없애 문제를 해결할 수 있다
 *
 *      --> 문제는 자원이 같은 전역변수등( 공유하는 자원 )을 사용하면
 *          문제가 발생한다
 *
 *      - 전역변수를 지역변수 or 인자로 바꾸면 문제를 가장 간단히 해결할 수 있다!!
 *
 */
title( '암묵적 입력을 인자로 바꾸기' );
{
    try {
        // 사용자가 장바구니에 추가 버튼을 클릭시 실횅되는 함수
        function add_item_to_cart( name , price , quantity ){
            // 장바구니 전역변수를 읽고 쓴다
            cart = add_item( cart , name , price , quantity );
            calc_cart_total( cart );
        }

        // ajax 요청
        function calc_cart_total( cart ){
            var total = 0;
            // 제품 API 로 AJAX 요청을 보낸다
            cost_ajax( cart , function( cost ){ // 요청이 완료될때 실행되는 콜백
                total += cost;
                // 판매 API 로 AJAX 요청을 보낸다
                shipping_ajax( cart , function( shipping ){ // 판매 응답이 오면 실행되는 콜백
                    total += shipping;
                    update_total_dom( total ); // 합계를 DOM 에 보여준다
                } )
            } )
        }
    }
    catch( e ){
        console.log( '장바구니 추가 버그' );
        debugger;
    }
    /**
     *  - 전역 변수를 사용하지 않고, 지역변수 사용 및 인자로 바꾸게 되면, 동시성 문제 해결 가능.
     *
     *  - add_item_to_cart 의 cart 전역 변수는 ,
     *    다이어그램에서 첫 번째 타임라인의 첫 번째 단계( 점선으로 구분된 )가 끝나야
     *    실행된다는 제약이 있다
     *
     *  --> 따라서, cart 를 사용하는 첫 번째 단계는 어느 타임라인에서나 항상 순서대로 실행된다
     *  ----> 여러 타임라인에 있는 전역변수를 안전하게 변경할 수 있다
     */
}