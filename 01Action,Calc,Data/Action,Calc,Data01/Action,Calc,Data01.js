/**
 * 프로그람 설명문서 주석
 * 2022.05. 23
 *
 *
 *           ===== 액션과 계산, 데이터 =====
 *
 *      --------------------------------------------------------
 *      - 액션
 *
 *      --> 실행 시점과 횟수에 의존
 *      ----> 부수 효과( side-effects )
 *            부수 효과가 있는 함수 ( side-effecting function )
 *            순수하지 않은 함수 ( impure function )
 *
 *            예 ) 이메일 보내기, 데이터 베이스 읽기
 *
 *      - 계산
 *
 *      --> 입력으로 출력을 계산
 *      ----> 순수 함수 ( pure function ),
 *            수학 함수 ( mathematical function )
 *
 *            예 ) 최댓값 찾기, 이메일 주소 확인
 *
 *      - 데이터
 *
 *      --> 이벤트에 대한 사실
 *      --------------------------------------------------------
 *
 *      - 모든 개발 과정에서 액션, 계산, 데이터를 구분하는 기술을 적용할 수 있다
 *      ----> 코드를 읽을 때 액션, 계산, 데이터 중 어디에 속하는지 잘 살펴봐야 함
 *            ( 특히, 액션은 시간에 의존하기에 더... )
 *
 *      ----> 아, 이해했다. 액션들 속에서 무엇을 계산으로 볼 것인가가 중요하네
 *            ( 액션들 속에서 순수하게 쓸 수 있는 함수들을 솎아내는 거구나 )
 */

/**
 *           ===== 정리 =====
 *
 *      1. 액션, 계산 , 데이터는 어디에든 적용가능하다
 *
 *      2. 액션 안에는 계산, 데이터, 또 다른 액션이 숨어 있을 가능성이 있다
 *      --> 따라서, 더 작은 액션과 데이터로 나누는 것을 언제 멈춰야하는지 아는 것이 중요
 *
 *      3. 계산은 더 작은 계산과 데이터로 나누고 연결 가능
 *
 *      4. 데이터는 데이터만 조합할 수 있다
 *      --> 데이터는 어디에도 영향을 주지 않기 때문에 데이터를 찾는 일을 가장 먼저 해야한다
 *
 *      5. 계산은 때로 머릿속에서 일어난다
 *      --> 어떤 단계에서 결정을 해야할 때 대부분은 계산이 될 가능성이 높다
 */
title('dsfsdf');
debugger;