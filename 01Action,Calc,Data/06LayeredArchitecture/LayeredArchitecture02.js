/**
 * 프로그람 설명문서 주석
 * 2022.05. 28
 *
 *
 *           ===== 계층형 설계 패턴( stratified design patterns ) =====
 *
 *      - 계층형 설계에서 가장 중요한 4가지 패턴
 *
 *      1. 직접 구현
 *      --> 함수 시그니처가 나타내고 있는 문제를 함수 본문의 적절한 구체화 수준에서 해결해야 함
 *      ----> 너무 구체적이라면 코드에서 냄새가 난다
 *
 *      2. 추상화의 벽
 *      --> 어떤 계층은 중요한 세부 구현은 감추고 인터페이스를 제공한다
 *      ----> 인터페이스를 사용하여 코드를 맨들면 높은 차원으로 생각할 수 있다
 *      ----> 고수준의 추상화 단계만 생각하면 됨
 *
 *      3. 작은 인터페이스
 *      --> 시스템이 커질수록 비즈니스 개념을 나타내는 인터페이스는 작고 강력한 동작으로 구성하는 것이 좋음
 *          ( 다른 동작도 직,간접적으로 최소한의 인터페이스를 유지하면서 정의해야 함 )
 *
 *      4. 편리한 계층
 *      --> 소프트웨어를 더 빠르고, 고품질로 제공하는데 도움이되는 계층에 시간을 투자해야함
 *          ( 그냥 좋아서 계층을 추가하면 안된다 - 그 코드와 그 코드가 속한 추상화 계층은 작업시 편리해야 함 )
 *
 */

title( '계층형 설계 패턴 설명' );
{
}